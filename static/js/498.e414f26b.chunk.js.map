{"version":3,"file":"static/js/498.e414f26b.chunk.js","mappings":"+QAEMA,EAAOC,EAAAA,GAAAA,KAAH,oEAKJC,EAAQD,EAAAA,GAAAA,MAAH,6FAOLE,EAAQF,EAAAA,GAAAA,MAAH,oPAcLG,EAAMH,EAAAA,GAAAA,OAAH,wK,oJC1BHI,EAAmBJ,EAAAA,GAAAA,MAAH,0PAchBK,EAAcL,EAAAA,GAAAA,GAAH,8CAIXM,EAAYN,EAAAA,GAAAA,OAAH,gMAUTO,EAAaP,EAAAA,GAAAA,EAAH,+D,sCCrBHQ,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,MACZ,GAAE,CAACH,IAEJ,IAGMI,EAAY,WACd,IAAMC,EAAmBP,EAASQ,cAClC,OAAIR,EAASS,OACFZ,EAASa,QAAO,SAAAC,GAAO,OAC1BA,EAAQC,KAAKJ,cAAcK,SAASN,EADV,IAIvBV,CAEd,EACD,OACI,iCACI,UAAC,KAAD,oCACI,SAACL,EAAD,CACIsB,GAAG,cACHC,KAAK,OACLH,KAAK,OACLI,MAAOhB,EACPiB,SArBK,SAACC,GAClBhB,GAASiB,EAAAA,EAAAA,IAAYD,EAAIE,OAAOJ,OACnC,EAoBeK,QAAQ,wHACRC,MAAM,uIACNC,UAAQ,OAEQ,IAAvBjB,IAAYG,QACR,wBACIH,IAAYkB,KAAI,SAAAb,GACb,OAAQ,UAAClB,EAAD,WAA+BkB,EAAQC,KAAvC,KAA+CD,EAAQc,QAC3D,SAAC/B,EAAD,CAAWqB,KAAK,SAASW,QAAS,WAAQxB,GAASyB,EAAAA,EAAAA,IAAchB,EAAQG,KAAMc,IAAAA,OAAAA,QAAA,wCAAiE,EAAhJ,8BADsBjB,EAAQG,GAGrC,OAEJ,SAACnB,EAAD,0DAKhB,E,UC/CD,EAPoB,WAChB,OAAQ,iCACJ,SAAC,KAAD,4BACA,SAACC,EAAD,MAEP,C,8ECRM,IAAMG,EAAc,SAAA8B,GAAK,OAAIA,EAAMhC,SAASiC,KAAnB,EACnB7B,EAAmB,SAAA4B,GAAK,OAAIA,EAAMnB,MAAV,C","sources":["components/Form.styled.js","components/ContactList/ContactsList.styled.js","components/ContactList/ContactList.js","pages/ContactsPage.js","redux/selectors.js"],"sourcesContent":["import styled from \"styled-components\"\n\nconst Form = styled.form`\n    width: 400px;\n    text-align: center;\n`\n\nconst Label = styled.label`\n    font-weight: 700;\n    font-size: 25px;\n    color: #2196f3;\n}\n`\n\nconst Input = styled.input`\n    width: 100%;\n    height: 25px;\n    border-radius: 0 5px;\n    color: #de23fe;\n    padding-left: 10px;\n    border-color: #de23fe;\n    margin-bottom: 10px;\n\n    &:focus {\n        outline-color: #2196f3\n    }\n`\n\nconst BTN = styled.button`\n    padding: 10px 20px;\n    border-radius: 0 5px;\n    border: none;\n    background-color: #2196f3;\n    color: black;\n    font-weight: 700;\n`\n\nexport {Form, Label, Input, BTN }","import styled from \"styled-components\"\n\nconst ContactListInput = styled.input`\n    height: 25px;\n    border-radius: 0 5px;\n    color: #de23fe;\n    padding-left: 10px;\n    border-color: #de23fe;\n    margin-bottom: 10px;\n    margin-left: 10px;\n\n    &:focus {\n        outline-color: #2196f3\n    }\n`\n\nconst ContactItem = styled.li`\n    font-size: 20px;\n`\n\nconst DeleteBTN = styled.button`\n    padding: 5px 10px;\n    border-radius: 0 5px;\n    border: none;\n    background-color: #2196f3;\n    color: black;\n    font-weight: 700;\n    margin-left: 10px;\n`\n\nconst NoContacts = styled.p`\n    color: red;\n    font-size: 20px;\n`\n\nexport {ContactListInput, ContactItem, DeleteBTN, NoContacts}\n","import { useEffect } from \"react\";\nimport {  useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact, fetchContacts } from \"redux/operations\"\nimport { getContacts, filteredContacts } from \"redux/selectors\"\nimport { findContact } from \"redux/slice\"\nimport { ContactListInput, ContactItem, DeleteBTN, NoContacts } from \"./ContactsList.styled\"\nimport Notiflix from 'notiflix';\nimport {Label } from \"../Form.styled\"\n\nexport const ContactList = () => {\n    const contacts = useSelector(getContacts)\n    const filtered = useSelector(filteredContacts)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    const changeFilter = (evt) => {\n        dispatch(findContact(evt.target.value))\n    }\n    const filtering = () => {\n        const normalizedFilter = filtered.toLowerCase();\n        if (filtered.length) {\n            return contacts.filter(contact =>\n                contact.name.toLowerCase().includes(normalizedFilter),\n            )\n        } else {\n            return contacts;\n        }\n    }\n    return (\n        <>\n            <Label>Find contacts by name\n                <ContactListInput\n                    id=\"searchInput\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={filtered}\n                    onChange={changeFilter}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dashand spaces. For example Adrian, Jacob Mercer, Charlesde Batz de Castelmore d'Artagnan\"\n                    required/>\n                </Label>\n            {filtering().length !== 0 ?  \n                (<ul>\n                    {filtering().map(contact => {\n                        return (<ContactItem key={contact.id}>{contact.name}: {contact.number}\n                            <DeleteBTN type=\"button\" onClick={() => { dispatch(deleteContact(contact.id)); Notiflix.Notify.failure(`Contact was deleted from contact-list`)}}>Delete contact</DeleteBTN>\n                        </ContactItem>)\n                    })}\n                </ul>) :\n                (<NoContacts>There is no contacts in your contact-list</NoContacts>)}\n            \n        </>\n        \n    )\n}","import { ContactList } from \"components/ContactList/ContactList\"\nimport {PagesToptext} from \"./Pages.styled\"\n\nconst ContactPage = () => {\n    return (<>\n        <PagesToptext>Contact List</PagesToptext>\n        <ContactList/>\n    </>)\n}\n\nexport default ContactPage","export const getContacts = state => state.contacts.items\nexport const filteredContacts = state => state.filter"],"names":["Form","styled","Label","Input","BTN","ContactListInput","ContactItem","DeleteBTN","NoContacts","ContactList","contacts","useSelector","getContacts","filtered","filteredContacts","dispatch","useDispatch","useEffect","fetchContacts","filtering","normalizedFilter","toLowerCase","length","filter","contact","name","includes","id","type","value","onChange","evt","findContact","target","pattern","title","required","map","number","onClick","deleteContact","Notiflix","state","items"],"sourceRoot":""}